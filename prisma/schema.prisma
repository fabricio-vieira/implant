// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id   String @id @default(uuid())
  name String
  slug String @unique

  gestor_validate Boolean @default(false)
  aproved         Boolean @default(false)
  has_monit       Boolean

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  Plan    Plan?   @relation(fields: [plan_id], references: [id])
  plan_id String?

  @@map("projects")
}

model Plan {
  id           String @id @default(uuid())
  title        String
  license_cost Float

  Project    Project[]
  created_at DateTime  @default(now())

  @@map("plans")
}

// model Door {
//   id   String @id @default(uuid())
//   title String
//   slug String 
//   range Int
//   exit_control Boolean
//   inside Boolean

//   @@map("doors")
// }

// model Gate {
//   id   String @id @default(uuid())
//   title String
//   range Int

//   @@map("gates")
// }

// model Dump {
//   id   String @id @default(uuid())
//   title String
//   range Int

//   @@map("dumps")
// }

// model Box {
//   id   String @id @default(uuid())
//   title String
//   range Int

//   @@map("boxes")
// }
// model Elevator {
//   id   String @id @default(uuid())
//   title String
//   range Int

//   @@map("elevators")
// }
// model Range {
//   id   String @id @default(uuid())
//   description String
//   total Int

//   @@map("ranges")
// }
